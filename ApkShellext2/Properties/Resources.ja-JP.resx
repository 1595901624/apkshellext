<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnOK" xml:space="preserve">
    <value>わかりました</value>
  </data>
  <data name="btnGitHub" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="btnUpdate" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="btnUpdateToolTip" xml:space="preserve">
    <value>更新のためプロジェクトサイトへ移動</value>
  </data>
  <data name="lblRenamePattern" xml:space="preserve">
    <value>名前変更パターン</value>
  </data>
  <data name="menuGotoAmazonAppStore" xml:space="preserve">
    <value>Amazon Appstore で {0} をチェック </value>
  </data>
  <data name="menuGotoAppleAppStore" xml:space="preserve">
    <value>Apple App Store で {0} をチェック </value>
  </data>
  <data name="menuGotoGooglePlay" xml:space="preserve">
    <value>Google Play で {0} をチェック</value>
  </data>
  <data name="menuGotoMicrosoftStore" xml:space="preserve">
    <value>Microsoft Storeで {0} をチェック</value>
  </data>
  <data name="menuMain" xml:space="preserve">
    <value>APK シェル拡張</value>
  </data>
  <data name="menuPreferences" xml:space="preserve">
    <value>設定 &amp;&amp; 更新</value>
  </data>
  <data name="menuRenameAs" xml:space="preserve">
    <value>名前を {0} に変更</value>
  </data>
  <data name="strAlwaysShowGooglePlay" xml:space="preserve">
    <value>複数のファイルを選択したときのアプリ ストア メニューを表示します。</value>
  </data>
  <data name="strAlwaysShowGooglePlayToolTip" xml:space="preserve">
    <value>チェックした場合、app ストア メニューも複数の apk ファイルが選択されて表示されます。
ご注意: ブラウザー ウィンドウの多くを開いて、パフォーマンスを大幅に影響可能性があります。
1 つのファイルが選択されている場合のみ、メニューを表示既定では、</value>
  </data>
  <data name="strCheckingNewVersion" xml:space="preserve">
    <value>新しいバージョンを確認しています ...</value>
  </data>
  <data name="strCheckProjectSite" xml:space="preserve">
    <value>プロジェクトサイトで更新を確認します。</value>
  </data>
  <data name="strCurrVersion" xml:space="preserve">
    <value>現在のバージョン: {0}</value>
  </data>
  <data name="strGotLatest" xml:space="preserve">
    <value>最新バージョンです。</value>
  </data>
  <data name="strGotoProjectSite" xml:space="preserve">
    <value>ApkShellext2 プロジェクトサイトへ</value>
  </data>
  <data name="strLanguages" xml:space="preserve">
    <value>使用する言語:</value>
  </data>
  <data name="strNeedApkShellextService" xml:space="preserve">
    <value>この機能は ApkShellextService を必要としています。サービスが開始されているか確認してください。</value>
  </data>
  <data name="strNewVersionAvailible" xml:space="preserve">
    <value>新しいバージョン {0} があります</value>
  </data>
  <data name="strPreferencesCaption" xml:space="preserve">
    <value>ApkShellext2 設定</value>
  </data>
  <data name="strReadFileFailed" xml:space="preserve">
    <value>ファイルを読み取れません</value>
  </data>
  <data name="strFileInfoPatternVariable" xml:space="preserve">
    <value>ユーザー変数を次を使用します:%AppName%: アプリ名%Version%: メイン バージョン番号、apk、それはバージョン名。
%Revision%: リビジョン番号、apk、iOS と windows のバージョンのコードは、この値は空です。
%Package%: パッケージの名前空間%Publisher%: 著者。
%OS%: Android ・ iOS/Windows%FileSize%: ファイル サイズ%LastModify%: 最終変更日</value>
  </data>
  <data name="strRenameToolTip" xml:space="preserve">
    <value>Android アプリでよく起きる、同じバージョンで異なるリビジョン番号、といった状況を回避します。
チェックすると、アプリファイルを %AppName%_%Version%_%Revision% 、または %AppName%_%Version% に変更します。</value>
  </data>
  <data name="strScanToDownload" xml:space="preserve">
    <value>QR コードをスキャンするとダウンロード出来ます</value>
  </data>
  <data name="strShowAppxIcon" xml:space="preserve">
    <value>Windows Phone アプリ (appx, appxbundle) のアイコンを表示する</value>
  </data>
  <data name="strShowIpaIcon" xml:space="preserve">
    <value>iOS アプリ (ipa) のアイコンを表示する</value>
  </data>
  <data name="strShowOverlayIcon" xml:space="preserve">
    <value>オーバーレイアイコンを表示する</value>
  </data>
  <data name="strShowOverlayIconToolTip" xml:space="preserve">
    <value>ファイルタイプのオーバーレイアイコンを表示します。</value>
  </data>
  <data name="strShowContextMenuIcon" xml:space="preserve">
    <value>コンテキストメニューアイコンの表示</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="btnNo" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="btnYes" xml:space="preserve">
    <value>[はい]</value>
  </data>
  <data name="strRenameConfirm" xml:space="preserve">
    <value>このファイルを {0} として名前を変更することを確認?</value>
  </data>
  <data name="strRenamePattern" xml:space="preserve">
    <value>パターンの名前を変更: (拡張子なし)</value>
  </data>
  <data name="twContextMenu" xml:space="preserve">
    <value>コンテキスト メニュー</value>
  </data>
  <data name="twGeneral" xml:space="preserve">
    <value>一般的な</value>
  </data>
  <data name="twIcon" xml:space="preserve">
    <value>アイコン ハンドラー</value>
  </data>
  <data name="twRename" xml:space="preserve">
    <value>名前を変更します。</value>
  </data>
  <data name="twInfotip" xml:space="preserve">
    <value>ヒント ハンドラー</value>
  </data>
  <data name="menuGotoApkMirror" xml:space="preserve">
    <value>ApkMirror.com に {0} をチェックします。</value>
  </data>
  <data name="btnResetPattern" xml:space="preserve">
    <value>最後に保存されているパターンを使用</value>
  </data>
  <data name="strShowAmazonStore" xml:space="preserve">
    <value>コンテキスト メニューにアプリケーション ストア リンク アマゾンを表示します。</value>
  </data>
  <data name="strShowApkMirror" xml:space="preserve">
    <value>コンテキスト メニューで ApkMirror リンクを示す</value>
  </data>
  <data name="strShowAppleStore" xml:space="preserve">
    <value>コンテキスト メニューで (ipa) のアップル ストアのリンクを示す</value>
  </data>
  <data name="strShowGooglePlay" xml:space="preserve">
    <value>コンテキスト メニューで Google の再生リンクを表示します。</value>
  </data>
  <data name="strShowMSStore" xml:space="preserve">
    <value>コンテキスト メニューで (appx/appxbundle) のマイクロソフト ストアのリンクを示す</value>
  </data>
  <data name="strInfoTipPattern" xml:space="preserve">
    <value>情報ヒントのパターン:</value>
  </data>
</root>