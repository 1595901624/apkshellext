<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="btnGitHub" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="btnUpdate" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="btnUpdateToolTip" xml:space="preserve">
    <value>Accédez au site du projet pour mettre à jour</value>
  </data>
  <data name="lblRenamePattern" xml:space="preserve">
    <value>RenamePattern</value>
  </data>
  <data name="menuGotoAmazonAppStore" xml:space="preserve">
    <value>Vérifier {0} sur Amazon Appstore</value>
  </data>
  <data name="menuGotoAppleAppStore" xml:space="preserve">
    <value>Vérifier {0} sur l'Appstore d'Apple</value>
  </data>
  <data name="menuGotoGooglePlay" xml:space="preserve">
    <value>Vérifier {0} sur GooglePlay</value>
  </data>
  <data name="menuGotoMicrosoftStore" xml:space="preserve">
    <value>Vérifier {0} sur Microsoft Store</value>
  </data>
  <data name="menuMain" xml:space="preserve">
    <value>APK Shell Extension</value>
  </data>
  <data name="menuPreferences" xml:space="preserve">
    <value>Préférences &amp;&amp; mise à jour</value>
  </data>
  <data name="menuRenameAs" xml:space="preserve">
    <value>Renommer en {0}</value>
  </data>
  <data name="strAlwaysShowGooglePlay" xml:space="preserve">
    <value>Toujours afficher le menu de GooglePlay</value>
  </data>
  <data name="strAlwaysShowGooglePlayToolTip" xml:space="preserve">
    <value>Si cochée, le menu GooglePlay apparaîtra même si plusieurs fichiers apk sont sélectionnés. 
Veuillez noter que cela ouvrira chaque applicatoin d'un seul coup, ce qui impactera vos performances significativement.
Par défaut, affiche uniquement le menu lorsqu'un fichier est sélectionné.</value>
  </data>
  <data name="strCheckingNewVersion" xml:space="preserve">
    <value>Vérification nouvelle version...</value>
  </data>
  <data name="strCheckProjectSite" xml:space="preserve">
    <value>Vérifiez le site du projet pour la mise à jour.</value>
  </data>
  <data name="strCurrVersion" xml:space="preserve">
    <value>Version actuelle : {0}</value>
  </data>
  <data name="strGotLatest" xml:space="preserve">
    <value>Formidable ! Vous avez la dernière version.</value>
  </data>
  <data name="strGotoProjectSite" xml:space="preserve">
    <value>Accédez au site du projet ApkShellext2</value>
  </data>
  <data name="strLanguages" xml:space="preserve">
    <value>Utiliser un langage :</value>
  </data>
  <data name="strNeedApkShellextService" xml:space="preserve">
    <value>Cette fonctionnalité requiert ApkShellextService, s'il vous plaît assurez-vous que le service est démarré.</value>
  </data>
  <data name="strNewVersionAvailible" xml:space="preserve">
    <value>Nouvelle version {0} est disponible</value>
  </data>
  <data name="strPreferencesCaption" xml:space="preserve">
    <value>Préférences ApkShellext2</value>
  </data>
  <data name="strReadFileFailed" xml:space="preserve">
    <value>Erreur lors de la lecture du fichier</value>
  </data>
  <data name="strRenamePattern" xml:space="preserve">
    <value>%AppName%: Nom de l'application
%Version%: Version
%Revision%: Révision
%Publisher%: Éditeur
%OS%: Android / iOS / Windows</value>
  </data>
  <data name="strRenameToolTip" xml:space="preserve">
    <value>Pour éviter la situation ou la version est pareille mais pas la révision. 
En cochant cela, renomme le fichier en %AppName%_%Version%_%Revision%, dans le cas contraire, renomme en %AppName%_%Version%.</value>
  </data>
  <data name="strRenameWithVersionCode" xml:space="preserve">
    <value>Renommage avec VersionCode</value>
  </data>
  <data name="strScanToDownload" xml:space="preserve">
    <value>Scannez le QR code pour télécharger</value>
  </data>
  <data name="strShowAppxIcon" xml:space="preserve">
    <value>Afficher l'icône des applications WindowsPhone (appx, appxbundle).</value>
  </data>
  <data name="strShowIpaIcon" xml:space="preserve">
    <value>Afficher l'icône d'application (ipa) d'iOS.</value>
  </data>
  <data name="strShowOverlayIcon" xml:space="preserve">
    <value>Afficher l'icône de superposition</value>
  </data>
  <data name="strShowOverlayIconToolTip" xml:space="preserve">
    <value>Affiche une icône par dessus le ficher afin de l'identifier.</value>
  </data>
  <data name="strShowContextMenuIcon" xml:space="preserve">
    <value>Afficher l'icône de menu contextuel</value>
  </data>
</root>